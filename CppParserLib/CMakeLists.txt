SET(LIB_NAME CppParserLib)
OPTION(${PROJECT_NAME}_BUILD_${LIB_NAME} "Set this to ON to build ${LIB_NAME}." ON)

IF(${${PROJECT_NAME}_BUILD_${LIB_NAME}})
    SET(HEADER_FILES
                        AbstractSyntaxTree.h
                        AbstractSyntaxTypes.h
                        ArrayCBlockSet.h
                        ASTAccessSpec.h
                        ASTAggregate.h
                        ASTArray.h
                        ASTBinaryExpr.h
                        ASTBlockStmt.h
                        ASTBreakStmt.h
                        ASTCastExpr.h
                        ASTClassSpec.h
                        ASTCommon.h
                        ASTConstExpr.h
                        ASTContinueStmt.h
                        ASTDeclarator.h
                        ASTDoStmt.h
                        ASTExpression.h
                        ASTExpressionStmt.h
                        ASTForStmt.h
                        ASTIfStmt.h
                        ASTInitDecl.h
                        ASTListDecl.h
                        ASTName.h
                        ASTReturnStmt.h
                        ASTSimpleSpec.h
                        ASTSpecifier.h
                        ASTStatement.h
                        ASTUnaryExpr.h
                        ASTVarDecl.h
                        CBlock.h
                        CBlockSet.h
                        CBlockToken.h
                        CFile.h
                        ClassType.h
                        ConditionalStack.h
                        Config.h
                        CppParser.h
                        CppReturn.h
                        CppToken.h
                        CppTokeniser.h
                        CppTokens.h
                        CTBoolean.h
                        CTChar.h
                        CTDouble.h
                        CTFloat.h
                        CTIdentifier.h
                        CTInt.h
                        CTLongDouble.h
                        CTLongLong.h
                        CTNewLine.h
                        CTNumber.h
                        CTReservedWord.h
                        CTShort.h
                        CTString.h
                        CTWideString.h
                        DefineArguments.h
                        DefineMap.h
                        ExternalString.h
                        FileDefine.h
                        GeneralToken.h
                        HeaderFile.h
                        HeaderFileMap.h
                        HeaderNameMap.h
                        HeaderNameMapStack.h
                        Headers.h
                        Library.h
                        LinePreprocessor.h
                        NamedDefine.h
                        PPAbstractHolder.h
                        PPConditional.h
                        PPDirective.h
                        PPHashes.h
                        PPHolder.h
                        PPInclude.h
                        PPLine.h
                        PPReplacement.h
                        PPText.h
                        PPTextWithSource.h
                        PPToken.h
                        PPTokenHolder.h
                        PPUnknown.h
                        PPWhiteSpace.h
                        Preprocessor.h
                        PreprocessorAnnotation.h
                        PreprocessorParser.h
                        PreprocessorTokeniser.h
                        PreprocessorTokenParser.h
                        Preprocessor_Linux.h
                        Project.h
                        SimpleOperator.h
                        TernaryExpr.h
                        TokenHelper.h
                        TranslationUnit.h
                        TranslationUnitFileArray.h
                    )

    SET(SOURCE_FILES 
                        AbstractSyntaxTree.cpp
                        ArrayCBlockSet.cpp
                        ASTAccessSpec.cpp
                        ASTAggregate.cpp
                        ASTArray.cpp
                        ASTBinaryExpr.cpp
                        ASTBlockStmt.cpp
                        ASTBreakStmt.cpp
                        ASTCastExpr.cpp
                        ASTClassSpec.cpp
                        ASTConstExpr.cpp
                        ASTContinueStmt.cpp
                        ASTDeclarator.cpp
                        ASTDoStmt.cpp
                        ASTExpression.cpp
                        ASTExpressionStmt.cpp
                        ASTForStmt.cpp
                        ASTIfStmt.cpp
                        ASTInitDecl.cpp
                        ASTListDecl.cpp
                        ASTName.cpp
                        ASTReturnStmt.cpp
                        ASTSimpleSpec.cpp
                        ASTSpecifier.cpp
                        ASTStatement.cpp
                        ASTUnaryExpr.cpp
                        ASTVarDecl.cpp
                        CBlock.cpp
                        CBlockSet.cpp
                        CBlockToken.cpp
                        CFile.cpp
                        ConditionalStack.cpp
                        Config.cpp
                        CppParser.cpp
                        CppReturn.cpp
                        CppToken.cpp
                        CppTokeniser.cpp
                        CTBoolean.cpp
                        CTChar.cpp
                        CTDouble.cpp
                        CTFloat.cpp
                        CTIdentifier.cpp
                        CTInt.cpp
                        CTLongDouble.cpp
                        CTLongLong.cpp
                        CTNewLine.cpp
                        CTNumber.cpp
                        CTReservedWord.cpp
                        CTShort.cpp
                        CTString.cpp
                        CTWideString.cpp
                        DefineArguments.cpp
                        DefineMap.cpp
                        ExternalString.cpp
                        FileDefine.cpp
                        GeneralToken.cpp
                        HeaderFile.cpp
                        HeaderFileMap.cpp
                        HeaderNameMap.cpp
                        HeaderNameMapStack.cpp
                        Headers.cpp
                        Library.cpp
                        LinePreprocessor.cpp
                        NamedDefine.cpp
                        PPAbstractHolder.cpp
                        PPConditional.cpp
                        PPDirective.cpp
                        PPHashes.cpp
                        PPHolder.cpp
                        PPInclude.cpp
                        PPLine.cpp
                        PPReplacement.cpp
                        PPText.cpp
                        PPTextWithSource.cpp
                        PPToken.cpp
                        PPTokenHolder.cpp
                        PPUnknown.cpp
                        PPWhiteSpace.cpp
                        Preprocessor.cpp
                        PreprocessorAnnotation.cpp
                        PreprocessorParser.cpp
                        PreprocessorTokeniser.cpp
                        PreprocessorTokenParser.cpp
                        Preprocessor_Windows.cpp
                        Project.cpp
                        TernaryExpr.cpp
                        TokenHelper.cpp
                        TranslationUnit.cpp
                        TranslationUnitFileArray.cpp
                    )

    # Shared Library or Static                    
    IF(${CodaphelaLibrary_BUILD_SHARED_LIBRARY})
        ADD_LIBRARY(${LIB_NAME} SHARED ${SOURCE_FILES} ${HEADER_FILES})
    ELSE()
        ADD_LIBRARY(${LIB_NAME} ${SOURCE_FILES} ${HEADER_FILES})
    ENDIF()
    # TARGET_LINK_LIBRARIES(${LIB_NAME} )

    # Installation
    INSTALL(TARGETS ${LIB_NAME}
            LIBRARY DESTINATION lib${LIB_ARCH}
            ARCHIVE DESTINATION lib${LIB_ARCH}
            RUNTIME DESTINATION bin)
    INSTALL(FILES ${HEADER_FILES}
            DESTINATION include/${PROJECT_NAME}/${LIB_NAME})
ENDIF()