SET(LIB_NAME CoreLib)
OPTION(${PROJECT_NAME}_BUILD_${LIB_NAME} "Set this to ON to build ${LIB_NAME}." ON)

IF(${${PROJECT_NAME}_BUILD_${LIB_NAME}})
    SET(HEADER_FILES
                        Annotation.h
                        ArrayTransientIndexedPointer.h
                        ArrayVariable.h
                        CalcBinaryExpression.h
                        CalcConstExpression.h
                        CalcExpression.h
                        CalcObject.h
                        CalcOperator.h
                        CalcParentheses.h
                        Calculator.h
                        CalcUnaryExpression.h
                        ConnectSocket.h
                        DurableFile.h
                        DurableFileController.h
                        DurableSet.h
                        EscapeCodes.h
                        FileIterator.h
                        FileIteratorReturn.h
                        Files.h
                        FunctionCaller.h
                        GuidClass.h
                        IndexAccess.h
                        IndexDescriptorsFile.h
                        IndexDiskDirectAccess.h
                        IndexedCache.h
                        IndexedConfig.h
                        IndexedData.h
                        IndexedDataDescriptor.h
                        IndexedDataFiles.h
                        IndexedDescriptors.h
                        IndexedFile.h
                        IndexedFiles.h
                        IndexedGeneral.h
                        IndexedHuge.h
                        IndexedMemory.h
                        Indexes.h
                        IndexHugeAccess.h
                        IndexMemoryAccess.h
                        IndexSmartAccess.h
                        ListenSocket.h
                        MarkupTextParser.h
                        OperatorAssignment.h
                        OperatorBitwiseAnd.h
                        OperatorBitwiseNot.h
                        OperatorBitwiseOr.h
                        OperatorBitwiseXOr.h
                        OperatorDecrement.h
                        OperatorDivide.h
                        OperatorEqual.h
                        OperatorGreaterThan.h
                        OperatorGreatherThanOrEqual.h
                        OperatorIncrement.h
                        OperatorLeftShift.h
                        OperatorLessThan.h
                        OperatorLessThanOrEqual.h
                        OperatorLogicalAnd.h
                        OperatorLogicalNot.h
                        OperatorLogicalOr.h
                        OperatorMinus.h
                        OperatorMultiply.h
                        OperatorNotEqual.h
                        OperatorPlus.h
                        OperatorPower.h
                        OperatorRemainder.h
                        OperatorRightShift.h
                        Operators.h
                        PackFileOffset.h
                        PlainTextEditor.h
                        PropertiesFile.h
                        Socket.h
                        SubTransaction.h
                        TextEditor.h
                        TextParser.h
                        Thread.h
                        Thread_Windows.h
                        Timer.h
                        Transaction.h
                        TransactionController.h
                        TransactionIndexedData.h
                        TransientIndexedFile.h
                        TransientIndexedFileDescriptor.h
                        TypeConverter.h
                        TypeNames.h
                        TypeParser.h
                        WinConfig.h
                        WinInit.h
                        XMLEntity.h
                        XMLFile.h
                        XMLParser.h
                    )

    SET(SOURCE_FILES 
                        Annotation.cpp
                        ArrayTransientIndexedPointer.cpp
                        ArrayVariable.cpp
                        CalcBinaryExpression.cpp
                        CalcConstExpression.cpp
                        CalcExpression.cpp
                        CalcOperator.cpp
                        CalcParentheses.cpp
                        Calculator.cpp
                        CalcUnaryExpression.cpp
                        ConnectSocket.cpp
                        DurableFile.cpp
                        DurableFileController.cpp
                        DurableSet.cpp
                        EscapeCodes.cpp
                        FileIterator.cpp
                        FileIteratorReturn.cpp
                        Files.cpp
                        FunctionCaller.cpp
                        GuidClass.cpp
                        IndexAccess.cpp
                        IndexDescriptorsFile.cpp
                        IndexDiskDirectAccess.cpp
                        IndexedCache.cpp
                        IndexedConfig.cpp
                        IndexedData.cpp
                        IndexedDataDescriptor.cpp
                        IndexedDataFiles.cpp
                        IndexedDescriptors.cpp
                        IndexedFile.cpp
                        IndexedFiles.cpp
                        IndexedHuge.cpp
                        IndexedMemory.cpp
                        Indexes.cpp
                        IndexHugeAccess.cpp
                        IndexMemoryAccess.cpp
                        IndexSmartAccess.cpp
                        ListenSocket.cpp
                        MarkupTextParser.cpp
                        OperatorAssignment.cpp
                        OperatorBitwiseAnd.cpp
                        OperatorBitwiseNot.cpp
                        OperatorBitwiseOr.cpp
                        OperatorBitwiseXOr.cpp
                        OperatorDecrement.cpp
                        OperatorDivide.cpp
                        OperatorEqual.cpp
                        OperatorGreaterThan.cpp
                        OperatorGreatherThanOrEqual.cpp
                        OperatorIncrement.cpp
                        OperatorLeftShift.cpp
                        OperatorLessThan.cpp
                        OperatorLessThanOrEqual.cpp
                        OperatorLogicalAnd.cpp
                        OperatorLogicalNot.cpp
                        OperatorLogicalOr.cpp
                        OperatorMinus.cpp
                        OperatorMultiply.cpp
                        OperatorNotEqual.cpp
                        OperatorPlus.cpp
                        OperatorPower.cpp
                        OperatorRemainder.cpp
                        OperatorRightShift.cpp
                        Operators.cpp
                        PackFileOffset.cpp
                        PlainTextEditor.cpp
                        PropertiesFile.cpp
                        Socket.cpp
                        SubTransaction.cpp
                        TextParser.cpp
                        Thread_Windows.cpp
                        Timer_Windows.cpp
                        Transaction.cpp
                        TransactionController.cpp
                        TransactionIndexedData.cpp
                        TransientIndexedFile.cpp
                        TransientIndexedFileDescriptor.cpp
                        TypeConverter.cpp
                        TypeNames.cpp
                        TypeParser.cpp
                        WinConfig.cpp
                        WinInit.cpp
                        XMLEntity.cpp
                        XMLFile.cpp
                        XMLParser.cpp
                    )
                    
    # Shared Library or Static                
    IF(${CodaphelaLibrary_BUILD_SHARED_LIBRARIES})
        ADD_LIBRARY(${LIB_NAME} SHARED ${SOURCE_FILES} ${HEADER_FILES})
        TARGET_LINK_LIBRARIES(${LIB_NAME} BaseLib)
        IF(WIN32)
            TARGET_LINK_LIBRARIES(${LIB_NAME} Ws2_32)
        ENDIF()
    ELSE()
        ADD_LIBRARY(${LIB_NAME} ${SOURCE_FILES} ${HEADER_FILES})
    ENDIF()
    # TARGET_LINK_LIBRARIES(${LIB_NAME} )

    # Installation
    INSTALL(TARGETS ${LIB_NAME}
            LIBRARY DESTINATION lib${LIB_ARCH}
            ARCHIVE DESTINATION lib${LIB_ARCH}
            RUNTIME DESTINATION bin)
    INSTALL(FILES ${HEADER_FILES}
            DESTINATION include/${PROJECT_NAME}/${LIB_NAME})
ENDIF()